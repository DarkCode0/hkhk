import pygame,sys
import random

width = 480
height = 600
fps = 30

white = (255,255,255)
black = (0,0,0)
darkgrey = (40,40,40)
lightgrey = (100,100,100)
green = (0,255,0)
red = (255,0,0)
yellow = (255,255,0)
blue = (0,0,255)

#initialize pygame and create window
pygame.init()
pygame.mixer.init()
pencere = pygame.display .set_mode((width,height))
pygame.display.set_caption("Shmup!")
clock = pygame.time.Clock()

class Player(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface((50,40))
        self.image.fill(black)
        self.rect = self.image.get_rect()
        self.rect.centerx = width / 2
        self.rect.bottom = height - 10
        self.speedx = 0

    def update(self):
        self.speedx = 0
        keystate = pygame.key.get_pressed()
        if keystate[pygame.K_a]:
            self.speedx = -10
        if keystate [pygame.K_d]:
            self.speedx = 10
        self.rect.x += self.speedx
        if self.rect.right > width:
            self.rect.right = width
        if self.rect.left < 0:
            self.rect.left = 0

class Mob(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.Surface ((30,40))
        self.image.fill(red)
        self.rect = self.image.get_rect()
        self.rect.x = random.randrange(width - self.rect.width)
        self.rect.y = random.randrange(-100, -40)
        self.speedy = random.randrange(4, 9)
        self.speedx = random.randrange(-3, 3)

    def update(self):
        self.rect.x += self.speedx
        self.rect.y += self.speedy
        if self.rect.top > height + 10 or self.rect.left < -25 or self.rect.right > width + 20:
            self.rect.x = random.randrange(width - self.rect.width)
            self.rect.y = random.randrange(-100 , -40)
            self.speedy = random.randrange(4 , 9)

all_sprites = pygame.sprite.Group()
mobs = pygame.sprite.Group()
player = Player()
all_sprites.add(player)
for i in range(8):
    m = Mob()
    all_sprites.add(m)
    mobs.add(m)

#Game Loop
while True:
    #process input (events)
    for event in pygame.event.get():
        if pygame.QUIT == event.type: sys.exit()
        clock.tick(fps)

        #update
        all_sprites.update()

        #draw / render
        pencere.fill(green)
        all_sprites.draw(pencere)
        # *after* drawing everything, flip the display
        pygame.display.flip()

